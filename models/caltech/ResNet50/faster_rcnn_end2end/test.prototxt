name: "ResNet-50"
input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input: "im_info"
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  bottom: "data"
  top: "conv1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 7
    pad: 3
    stride: 2
    bias_term: true
  }
}
layer {
  name: "bn_conv1"
  bottom: "conv1"
  top: "conv1"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale_conv1"
  bottom: "conv1"
  top: "conv1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_relu"
  bottom: "conv1"
  top: "conv1"
  type: "ReLU"
}
layer {
  name: "pool1"
  bottom: "conv1"
  top: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "res2a_branch2a"
  bottom: "pool1"
  top: "res2a_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn2a_branch2a"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2a_branch2a"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a_branch2a_relu"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  type: "ReLU"
}
layer {
  name: "res2a_branch2b"
  bottom: "res2a_branch2a"
  top: "res2a_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn2a_branch2b"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2a_branch2b"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a_branch2b_relu"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  type: "ReLU"
}
layer {
  name: "res2a_branch2c"
  bottom: "res2a_branch2b"
  top: "res2a_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn2a_branch2c"
  bottom: "res2a_branch2c"
  top: "res2a_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2a_branch2c"
  bottom: "res2a_branch2c"
  top: "res2a_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a_branch1"
  bottom: "pool1"
  top: "res2a_branch1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn2a_branch1"
  bottom: "res2a_branch1"
  top: "res2a_branch1"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2a_branch1"
  bottom: "res2a_branch1"
  top: "res2a_branch1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res2a"
	bottom: "res2a_branch1"
	bottom: "res2a_branch2c"
	top: "res2a"
	type: "Eltwise"
}
layer {
  name: "res2a_relu"
  bottom: "res2a"
  top: "res2a"
  type: "ReLU"
}
layer {
  name: "res2b_branch2a"
  bottom: "res2a"
  top: "res2b_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn2b_branch2a"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2b_branch2a"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2b_branch2a_relu"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  type: "ReLU"
}
layer {
  name: "res2b_branch2b"
  bottom: "res2b_branch2a"
  top: "res2b_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn2b_branch2b"
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2b_branch2b"
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2b_branch2b_relu"
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  type: "ReLU"
}
layer {
  name: "res2b_branch2c"
  bottom: "res2b_branch2b"
  top: "res2b_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn2b_branch2c"
  bottom: "res2b_branch2c"
  top: "res2b_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2b_branch2c"
  bottom: "res2b_branch2c"
  top: "res2b_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res2b"
	bottom: "res2a"
	bottom: "res2b_branch2c"
	top: "res2b"
	type: "Eltwise"
}
layer {
  name: "res2b_relu"
  bottom: "res2b"
  top: "res2b"
  type: "ReLU"
}
layer {
  name: "res2c_branch2a"
  bottom: "res2b"
  top: "res2c_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn2c_branch2a"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2c_branch2a"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c_branch2a_relu"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  type: "ReLU"
}
layer {
  name: "res2c_branch2b"
  bottom: "res2c_branch2a"
  top: "res2c_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn2c_branch2b"
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2c_branch2b"
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c_branch2b_relu"
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
  type: "ReLU"
}
layer {
  name: "res2c_branch2c"
  bottom: "res2c_branch2b"
  top: "res2c_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn2c_branch2c"
  bottom: "res2c_branch2c"
  top: "res2c_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2c_branch2c"
  bottom: "res2c_branch2c"
  top: "res2c_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res2c"
	bottom: "res2b"
	bottom: "res2c_branch2c"
	top: "res2c"
	type: "Eltwise"
}
layer {
  name: "res2c_relu"
  bottom: "res2c"
  top: "res2c"
  type: "ReLU"
}
layer {
  name: "res3a_branch2a"
  bottom: "res2c"
  top: "res3a_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 2
    bias_term: false
  }
}
layer {
  name: "bn3a_branch2a"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3a_branch2a"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a_branch2a_relu"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  type: "ReLU"
}
layer {
  name: "res3a_branch2b"
  bottom: "res3a_branch2a"
  top: "res3a_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn3a_branch2b"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3a_branch2b"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a_branch2b_relu"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  type: "ReLU"
}
layer {
  name: "res3a_branch2c"
  bottom: "res3a_branch2b"
  top: "res3a_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn3a_branch2c"
  bottom: "res3a_branch2c"
  top: "res3a_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3a_branch2c"
  bottom: "res3a_branch2c"
  top: "res3a_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a_branch1"
  bottom: "res2c"
  top: "res3a_branch1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 2
    bias_term: false
  }
}
layer {
  name: "bn3a_branch1"
  bottom: "res3a_branch1"
  top: "res3a_branch1"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3a_branch1"
  bottom: "res3a_branch1"
  top: "res3a_branch1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res3a"
	bottom: "res3a_branch1"
	bottom: "res3a_branch2c"
	top: "res3a"
	type: "Eltwise"
}
layer {
  name: "res3a_relu"
  bottom: "res3a"
  top: "res3a"
  type: "ReLU"
}
layer {
  name: "res3b_branch2a"
  bottom: "res3a"
  top: "res3b_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn3b_branch2a"
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3b_branch2a"
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3b_branch2a_relu"
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  type: "ReLU"
}
layer {
  name: "res3b_branch2b"
  bottom: "res3b_branch2a"
  top: "res3b_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn3b_branch2b"
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3b_branch2b"
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3b_branch2b_relu"
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  type: "ReLU"
}
layer {
  name: "res3b_branch2c"
  bottom: "res3b_branch2b"
  top: "res3b_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn3b_branch2c"
  bottom: "res3b_branch2c"
  top: "res3b_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3b_branch2c"
  bottom: "res3b_branch2c"
  top: "res3b_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res3b"
	bottom: "res3a"
	bottom: "res3b_branch2c"
	top: "res3b"
	type: "Eltwise"
}
layer {
  name: "res3b_relu"
  bottom: "res3b"
  top: "res3b"
  type: "ReLU"
}
layer {
  name: "res3c_branch2a"
  bottom: "res3b"
  top: "res3c_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn3c_branch2a"
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3c_branch2a"
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3c_branch2a_relu"
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  type: "ReLU"
}
layer {
  name: "res3c_branch2b"
  bottom: "res3c_branch2a"
  top: "res3c_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn3c_branch2b"
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3c_branch2b"
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3c_branch2b_relu"
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
  type: "ReLU"
}
layer {
  name: "res3c_branch2c"
  bottom: "res3c_branch2b"
  top: "res3c_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn3c_branch2c"
  bottom: "res3c_branch2c"
  top: "res3c_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3c_branch2c"
  bottom: "res3c_branch2c"
  top: "res3c_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res3c"
	bottom: "res3b"
	bottom: "res3c_branch2c"
	top: "res3c"
	type: "Eltwise"
}
layer {
  name: "res3c_relu"
  bottom: "res3c"
  top: "res3c"
  type: "ReLU"
}
layer {
  name: "res3d_branch2a"
  bottom: "res3c"
  top: "res3d_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn3d_branch2a"
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3d_branch2a"
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d_branch2a_relu"
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  type: "ReLU"
}
layer {
  name: "res3d_branch2b"
  bottom: "res3d_branch2a"
  top: "res3d_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn3d_branch2b"
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3d_branch2b"
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d_branch2b_relu"
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
  type: "ReLU"
}
layer {
  name: "res3d_branch2c"
  bottom: "res3d_branch2b"
  top: "res3d_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn3d_branch2c"
  bottom: "res3d_branch2c"
  top: "res3d_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3d_branch2c"
  bottom: "res3d_branch2c"
  top: "res3d_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res3d"
	bottom: "res3c"
	bottom: "res3d_branch2c"
	top: "res3d"
	type: "Eltwise"
}
layer {
  name: "res3d_relu"
  bottom: "res3d"
  top: "res3d"
  type: "ReLU"
}
layer {
  name: "res4a_branch2a"
  bottom: "res3d"
  top: "res4a_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 2
    bias_term: false
  }
}
layer {
  name: "bn4a_branch2a"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4a_branch2a"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch2a_relu"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  type: "ReLU"
}
layer {
  name: "res4a_branch2b"
  bottom: "res4a_branch2a"
  top: "res4a_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4a_branch2b"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4a_branch2b"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch2b_relu"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  type: "ReLU"
}
layer {
  name: "res4a_branch2c"
  bottom: "res4a_branch2b"
  top: "res4a_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4a_branch2c"
  bottom: "res4a_branch2c"
  top: "res4a_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4a_branch2c"
  bottom: "res4a_branch2c"
  top: "res4a_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch1"
  bottom: "res3d"
  top: "res4a_branch1"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 2
    bias_term: false
  }
}
layer {
  name: "bn4a_branch1"
  bottom: "res4a_branch1"
  top: "res4a_branch1"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4a_branch1"
  bottom: "res4a_branch1"
  top: "res4a_branch1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res4a"
	bottom: "res4a_branch1"
	bottom: "res4a_branch2c"
	top: "res4a"
	type: "Eltwise"
}
layer {
  name: "res4a_relu"
  bottom: "res4a"
  top: "res4a"
  type: "ReLU"
}
layer {
  name: "res4b_branch2a"
  bottom: "res4a"
  top: "res4b_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4b_branch2a"
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4b_branch2a"
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b_branch2a_relu"
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  type: "ReLU"
}
layer {
  name: "res4b_branch2b"
  bottom: "res4b_branch2a"
  top: "res4b_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4b_branch2b"
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4b_branch2b"
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b_branch2b_relu"
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  type: "ReLU"
}
layer {
  name: "res4b_branch2c"
  bottom: "res4b_branch2b"
  top: "res4b_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4b_branch2c"
  bottom: "res4b_branch2c"
  top: "res4b_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4b_branch2c"
  bottom: "res4b_branch2c"
  top: "res4b_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res4b"
	bottom: "res4a"
	bottom: "res4b_branch2c"
	top: "res4b"
	type: "Eltwise"
}
layer {
  name: "res4b_relu"
  bottom: "res4b"
  top: "res4b"
  type: "ReLU"
}
layer {
  name: "res4c_branch2a"
  bottom: "res4b"
  top: "res4c_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4c_branch2a"
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4c_branch2a"
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c_branch2a_relu"
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  type: "ReLU"
}
layer {
  name: "res4c_branch2b"
  bottom: "res4c_branch2a"
  top: "res4c_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4c_branch2b"
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4c_branch2b"
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c_branch2b_relu"
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
  type: "ReLU"
}
layer {
  name: "res4c_branch2c"
  bottom: "res4c_branch2b"
  top: "res4c_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4c_branch2c"
  bottom: "res4c_branch2c"
  top: "res4c_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4c_branch2c"
  bottom: "res4c_branch2c"
  top: "res4c_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res4c"
	bottom: "res4b"
	bottom: "res4c_branch2c"
	top: "res4c"
	type: "Eltwise"
}
layer {
  name: "res4c_relu"
  bottom: "res4c"
  top: "res4c"
  type: "ReLU"
}
layer {
  name: "res4d_branch2a"
  bottom: "res4c"
  top: "res4d_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4d_branch2a"
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4d_branch2a"
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d_branch2a_relu"
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  type: "ReLU"
}
layer {
  name: "res4d_branch2b"
  bottom: "res4d_branch2a"
  top: "res4d_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4d_branch2b"
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4d_branch2b"
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d_branch2b_relu"
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
  type: "ReLU"
}
layer {
  name: "res4d_branch2c"
  bottom: "res4d_branch2b"
  top: "res4d_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4d_branch2c"
  bottom: "res4d_branch2c"
  top: "res4d_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4d_branch2c"
  bottom: "res4d_branch2c"
  top: "res4d_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res4d"
	bottom: "res4c"
	bottom: "res4d_branch2c"
	top: "res4d"
	type: "Eltwise"
}
layer {
  name: "res4d_relu"
  bottom: "res4d"
  top: "res4d"
  type: "ReLU"
}
layer {
  name: "res4e_branch2a"
  bottom: "res4d"
  top: "res4e_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4e_branch2a"
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4e_branch2a"
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e_branch2a_relu"
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  type: "ReLU"
}
layer {
  name: "res4e_branch2b"
  bottom: "res4e_branch2a"
  top: "res4e_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4e_branch2b"
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4e_branch2b"
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e_branch2b_relu"
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
  type: "ReLU"
}
layer {
  name: "res4e_branch2c"
  bottom: "res4e_branch2b"
  top: "res4e_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4e_branch2c"
  bottom: "res4e_branch2c"
  top: "res4e_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4e_branch2c"
  bottom: "res4e_branch2c"
  top: "res4e_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res4e"
	bottom: "res4d"
	bottom: "res4e_branch2c"
	top: "res4e"
	type: "Eltwise"
}
layer {
  name: "res4e_relu"
  bottom: "res4e"
  top: "res4e"
  type: "ReLU"
}
layer {
  name: "res4f_branch2a"
  bottom: "res4e"
  top: "res4f_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4f_branch2a"
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4f_branch2a"
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_branch2a_relu"
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  type: "ReLU"
}
layer {
  name: "res4f_branch2b"
  bottom: "res4f_branch2a"
  top: "res4f_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4f_branch2b"
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4f_branch2b"
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_branch2b_relu"
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
  type: "ReLU"
}
layer {
  name: "res4f_branch2c"
  bottom: "res4f_branch2b"
  top: "res4f_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn4f_branch2c"
  bottom: "res4f_branch2c"
  top: "res4f_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4f_branch2c"
  bottom: "res4f_branch2c"
  top: "res4f_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res4f"
	bottom: "res4e"
	bottom: "res4f_branch2c"
	top: "res4f"
	type: "Eltwise"
}
layer {
  name: "res4f_relu"
  bottom: "res4f"
  top: "res4f"
  type: "ReLU"
}
#============== RPN ===============
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "res4f"
  top: "rpn/output"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 512
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 18   # 2(bg/fg) * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 36   # 4 * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
   bottom: "rpn_cls_score"
   top: "rpn_cls_score_reshape"
   name: "rpn_cls_score_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}
#============== ROI Proposal ===============
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: 'rpn_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'rpn_cls_prob'
  top: 'rpn_cls_prob_reshape'
  reshape_param { shape { dim: 0 dim: 18 dim: -1 dim: 0 } }
}
layer {
  name: 'proposal'
  type: 'Python'
  bottom: 'rpn_cls_prob_reshape'
  bottom: 'rpn_bbox_pred'
  bottom: 'im_info'
  top: 'rois'
  python_param {
    module: 'rpn.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "'feat_stride': 16"
  }
}
#============== RCNN ===============
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "res4f"
  bottom: "rois"
  top: "roi_pool5"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.062500
  }
}
layer {
  name: "res5a_branch2a"
  bottom: "roi_pool5"
  top: "res5a_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn5a_branch2a"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale5a_branch2a"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5a_branch2a_relu"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  type: "ReLU"
}
layer {
  name: "res5a_branch2b"
  bottom: "res5a_branch2a"
  top: "res5a_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn5a_branch2b"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale5a_branch2b"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5a_branch2b_relu"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  type: "ReLU"
}
layer {
  name: "res5a_branch2c"
  bottom: "res5a_branch2b"
  top: "res5a_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn5a_branch2c"
  bottom: "res5a_branch2c"
  top: "res5a_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale5a_branch2c"
  bottom: "res5a_branch2c"
  top: "res5a_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5a_branch1"
  bottom: "roi_pool5"
  top: "res5a_branch1"
  type: "Convolution"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn5a_branch1"
  bottom: "res5a_branch1"
  top: "res5a_branch1"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale5a_branch1"
  bottom: "res5a_branch1"
  top: "res5a_branch1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res5a"
	bottom: "res5a_branch1"
	bottom: "res5a_branch2c"
	top: "res5a"
	type: "Eltwise"
}
layer {
  name: "res5a_relu"
  bottom: "res5a"
  top: "res5a"
  type: "ReLU"
}
layer {
  name: "res5b_branch2a"
  bottom: "res5a"
  top: "res5b_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn5b_branch2a"
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale5b_branch2a"
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5b_branch2a_relu"
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  type: "ReLU"
}
layer {
  name: "res5b_branch2b"
  bottom: "res5b_branch2a"
  top: "res5b_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn5b_branch2b"
  bottom: "res5b_branch2b"
  top: "res5b_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale5b_branch2b"
  bottom: "res5b_branch2b"
  top: "res5b_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5b_branch2b_relu"
  bottom: "res5b_branch2b"
  top: "res5b_branch2b"
  type: "ReLU"
}
layer {
  name: "res5b_branch2c"
  bottom: "res5b_branch2b"
  top: "res5b_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn5b_branch2c"
  bottom: "res5b_branch2c"
  top: "res5b_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale5b_branch2c"
  bottom: "res5b_branch2c"
  top: "res5b_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res5b"
	bottom: "res5a"
	bottom: "res5b_branch2c"
	top: "res5b"
	type: "Eltwise"
}
layer {
  name: "res5b_relu"
  bottom: "res5b"
  top: "res5b"
  type: "ReLU"
}
layer {
  name: "res5c_branch2a"
  bottom: "res5b"
  top: "res5c_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn5c_branch2a"
  bottom: "res5c_branch2a"
  top: "res5c_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale5c_branch2a"
  bottom: "res5c_branch2a"
  top: "res5c_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5c_branch2a_relu"
  bottom: "res5c_branch2a"
  top: "res5c_branch2a"
  type: "ReLU"
}
layer {
  name: "res5c_branch2b"
  bottom: "res5c_branch2a"
  top: "res5c_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn5c_branch2b"
  bottom: "res5c_branch2b"
  top: "res5c_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale5c_branch2b"
  bottom: "res5c_branch2b"
  top: "res5c_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5c_branch2b_relu"
  bottom: "res5c_branch2b"
  top: "res5c_branch2b"
  type: "ReLU"
}
layer {
  name: "res5c_branch2c"
  bottom: "res5c_branch2b"
  top: "res5c_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}
layer {
  name: "bn5c_branch2c"
  bottom: "res5c_branch2c"
  top: "res5c_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale5c_branch2c"
  bottom: "res5c_branch2c"
  top: "res5c_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
	name: "res5c"
	bottom: "res5b"
	bottom: "res5c_branch2c"
	top: "res5c"
	type: "Eltwise"
}
layer {
  name: "res5c_relu"
  bottom: "res5c"
  top: "res5c"
  type: "ReLU"
}
layer {
  name: "pool5"
  bottom: "res5c"
  top: "pool5"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "pool5"
  top: "cls_score"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
     num_output: 2
     
     bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "pool5"
  top: "bbox_pred"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
     num_output: 8
     
     bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
}
